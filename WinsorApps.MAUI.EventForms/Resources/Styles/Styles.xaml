<?xml version="1.0" encoding="UTF-8" ?>
<?xaml-comp compile="true" ?>
<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml">
   
    <!--
        This is the spinny thing that is a subtle indicator that the App is doing something
    -->
    <Style TargetType="ActivityIndicator">
        <Setter Property="Color" Value="{AppThemeBinding Light={StaticResource WinsorRed}, Dark={StaticResource White}}" />
    </Style>
    
    <Style TargetType="VerticalStackLayout">
        <Setter Property="HorizontalOptions" Value="Start"/>
        <Setter Property="VerticalOptions" Value="Start"/>
        <Setter Property="Padding" Value="5"/>
    </Style>

    <Style TargetType="VerticalStackLayout" Class="MainContainer">
        <Setter Property="MinimumWidthRequest" Value="1000"/>

    </Style>

    <Style TargetType="HorizontalStackLayout">
        <Setter Property="HorizontalOptions" Value="FillAndExpand"/>
        <Setter Property="VerticalOptions" Value="Center"/>
        <Setter Property="Padding" Value="5"/>
    </Style>

    <!--
        Default Border Style
    -->
    <Style TargetType="Border">
        <Setter Property="Stroke" Value="{AppThemeBinding Light={StaticResource WarmGrey}, Dark={StaticResource CoolGrey}}" />
        <Setter Property="StrokeShape" Value="Rectangle"/>
        <Setter Property="StrokeThickness" Value="1"/>
    </Style>


    <Style TargetType="CollectionView">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource WarmGrey}, Dark={StaticResource SlateDark}}"/>
        <Setter Property="Margin" Value="5"/>
    </Style>
    
    

    <Style TargetType="CheckBox">
        <Setter Property="Color" Value="{AppThemeBinding Light={StaticResource WinsorRed}, Dark={StaticResource White}}" />
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Color" Value="{AppThemeBinding Light={StaticResource CoolGrey}, Dark={StaticResource WarmGrey}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="VerticalStackLayout" Class="Card">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource WarmGrey}, Dark={StaticResource Blue}}"/>
        <Setter Property="Margin" Value="5"/>
    </Style>
    <Style TargetType="HorizontalStackLayout" Class="Card">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource WarmGrey}, Dark={StaticResource Blue}}"/>
        <Setter Property="Margin" Value="5"/>
    </Style>

    <Style TargetType="DatePicker">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource WarmGrey}}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontFamily" Value="SansSerif"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource SlateDark}, Dark={StaticResource SlateLight}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="FlyoutPage">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource CoolGrey}, Dark={StaticResource DarkBlue}}"/>
    </Style>
    
    <!--
        Editor is a Multi-Line Text Entry.
    -->
    <Style TargetType="Editor">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource SlateDark}}" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource WarmGrey}}" />
        <Setter Property="FontFamily" Value="OpenSansRegular"/>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="PlaceholderColor" Value="{AppThemeBinding Light={StaticResource CoolGrey}, Dark={StaticResource Blue}}" />
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource CoolGrey}, Dark={StaticResource WarmGrey}}" />
                            <Setter Property="BackgroundColor" Value="Transparent"/>
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <!--
        Entry is a single line text entry box.
    -->
    <Style TargetType="Entry">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontFamily" Value="SansSerif"/>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="PlaceholderColor" Value="{AppThemeBinding Light={StaticResource CoolGrey}, Dark={StaticResource Blue}}" />
        <Setter Property="MinimumHeightRequest" Value="30"/>
        <Setter Property="MinimumWidthRequest" Value="10"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource CoolGrey}, Dark={StaticResource WarmGrey}}" />
                            <Setter Property="BackgroundColor" Value="Transparent" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <!--
        Visual Element that can be added around other elements
    -->
    <Style TargetType="Frame">
        <Setter Property="HasShadow" Value="True" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource WarmGrey}, Dark={StaticResource DarkBlue}}"/>
        <Setter Property="BorderColor" Value="{AppThemeBinding Light={StaticResource CoolGrey}, Dark={StaticResource Blue}}" />
        <Setter Property="CornerRadius" Value="6" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Margin" Value="5"/>
    </Style>

    <Style TargetType="ImageButton">
        <Setter Property="Opacity" Value="1" />
        <Setter Property="BorderColor" Value="Transparent"/>
        <Setter Property="BorderWidth" Value="0"/>
        <Setter Property="CornerRadius" Value="0"/>
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.5" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>
    
    <Style TargetType="ListView">
        <Setter Property="SelectionMode" Value="None"/>
        <Setter Property="SeparatorColor" Value="{AppThemeBinding Light={StaticResource CoolGrey}, Dark={StaticResource WarmGrey}}" />
        <Setter Property="RefreshControlColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource CoolGrey}}" />
    </Style>
    <!--
        This is like a drop-down
    -->
    <Style TargetType="Picker">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
        <Setter Property="TitleColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource CoolGrey}}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontFamily" Value="OpenSansRegular"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="130"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource CoolGrey}, Dark={StaticResource WarmGrey}}" />
                            <Setter Property="TitleColor" Value="{AppThemeBinding Light={StaticResource CoolGrey}, Dark={StaticResource WarmGrey}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="ProgressBar">
        <Setter Property="ProgressColor" Value="{AppThemeBinding Light={StaticResource WinsorRed}, Dark={StaticResource White}}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="ProgressColor" Value="{AppThemeBinding Light={StaticResource CoolGrey}, Dark={StaticResource WarmGrey}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="RadioButton">
        <Setter Property="BackgroundColor" Value="Transparent"/>
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
        <Setter Property="FontFamily" Value="OpenSansRegular"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource CoolGrey}, Dark={StaticResource WarmGrey}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="RefreshView">
        <Setter Property="RefreshColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource CoolGrey}}" />
    </Style>

    <Style TargetType="SearchBar">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
        <Setter Property="PlaceholderColor" Value="{StaticResource SlateLight}" />
        <Setter Property="CancelButtonColor" Value="{StaticResource WinsorRed}" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource WarmGrey}, Dark={StaticResource SlateDark}}" />
        <Setter Property="FontFamily" Value="SansSerif" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource SlateLight}, Dark={StaticResource WarmGrey}}" />
                            <Setter Property="PlaceholderColor" Value="{AppThemeBinding Light={StaticResource SlateLight}, Dark={StaticResource WarmGrey}}" />
                            <Setter Property="BackgroundColor" Value="Transparent"/>
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="Shadow">
        <Setter Property="Radius" Value="15" />
        <Setter Property="Opacity" Value="0.5" />
        <Setter Property="Brush" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource White}}" />
        <Setter Property="Offset" Value="10,10" />
    </Style>

    <Style TargetType="Slider">
        <Setter Property="MinimumTrackColor" Value="{AppThemeBinding Light={StaticResource WinsorRed}, Dark={StaticResource White}}" />
        <Setter Property="MaximumTrackColor" Value="{AppThemeBinding Light={StaticResource CoolGrey}, Dark={StaticResource WarmGrey}}" />
        <Setter Property="ThumbColor" Value="{AppThemeBinding Light={StaticResource WinsorRed}, Dark={StaticResource White}}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="MinimumTrackColor" Value="{AppThemeBinding Light={StaticResource CoolGrey}, Dark={StaticResource WarmGrey}}"/>
                            <Setter Property="MaximumTrackColor" Value="{AppThemeBinding Light={StaticResource CoolGrey}, Dark={StaticResource WarmGrey}}"/>
                            <Setter Property="ThumbColor" Value="{AppThemeBinding Light={StaticResource CoolGrey}, Dark={StaticResource WarmGrey}}"/>
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="SwipeItem">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Black}}" />
    </Style>

    <Style TargetType="Switch">
        <Setter Property="OnColor" Value="{AppThemeBinding Light={StaticResource WinsorRed}, Dark={StaticResource White}}" />
        <Setter Property="ThumbColor" Value="{StaticResource White}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="OnColor" Value="{AppThemeBinding Light={StaticResource CoolGrey}, Dark={StaticResource WarmGrey}}" />
                            <Setter Property="ThumbColor" Value="{AppThemeBinding Light={StaticResource CoolGrey}, Dark={StaticResource WarmGrey}}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="On">
                        <VisualState.Setters>
                            <Setter Property="OnColor" Value="{AppThemeBinding Light={StaticResource DarkBlue}, Dark={StaticResource CoolGrey}}" />
                            <Setter Property="ThumbColor" Value="{AppThemeBinding Light={StaticResource WinsorRed}, Dark={StaticResource White}}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Off">
                        <VisualState.Setters>
                            <Setter Property="ThumbColor" Value="{AppThemeBinding Light={StaticResource Blue}, Dark={StaticResource WarmGrey}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="TimePicker">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource DarkBlue}}" />
        <Setter Property="BackgroundColor" Value="{StaticResource WarmGrey}"/>
        <Setter Property="FontFamily" Value="SansSerif"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource CoolGrey}, Dark={StaticResource SlateLight}}" />
                            <Setter Property="BackgroundColor" Value="Transparent"/>
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="BoxView" Class="Bar">
        <Setter Property="HeightRequest" Value="2" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource WinsorRed}, Dark=White}" />
        <Setter Property="Margin" Value="0,15" />
    </Style>
    
    <Style TargetType="Page" ApplyToDerivedTypes="True">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource DarkBlue}}" />
    </Style>
    

    <Style TargetType="NavigationPage">
        <Setter Property="BarBackgroundColor" Value="{AppThemeBinding Light={StaticResource WinsorRed}, Dark={StaticResource WarmGrey}}" />
        <Setter Property="BarTextColor" Value="{AppThemeBinding Light={StaticResource CoolGrey}, Dark={StaticResource White}}" />
        <Setter Property="IconColor" Value="{AppThemeBinding Light={StaticResource CoolGrey}, Dark={StaticResource White}}" />
    </Style>

    <Style TargetType="TabbedPage">
        <Setter Property="BarBackgroundColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource WarmGrey}}" />
        <Setter Property="BarTextColor" Value="{AppThemeBinding Light={StaticResource WinsorRed}, Dark={StaticResource White}}" />
        <Setter Property="UnselectedTabColor" Value="{AppThemeBinding Light={StaticResource CoolGrey}, Dark={StaticResource WarmGrey}}" />
        <Setter Property="SelectedTabColor" Value="{AppThemeBinding Light={StaticResource WarmGrey}, Dark={StaticResource CoolGrey}}" />
    </Style>

</ResourceDictionary>
